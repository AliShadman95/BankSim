{"version":3,"sources":["Media/purple-sphere-312.png","Media/hero-bg-3840.png","Media/waves-slider-blue-6176.png","Media/bg-waves-1024.png","Media/microphone.png","Components/Logo.jsx","Components/Login.jsx","Components/Lists.jsx","Components/ListContainer.jsx","Components/Navbar.jsx","actions/bankActions.js","actions/types.js","actions/personActions.js","Components/Create.jsx","actions/accountActions.js","Components/mainPage/Hero.jsx","Components/Footer.jsx","Components/Main.jsx","Components/accountLoginPage/Operation.jsx","actions/transactionActions.js","Components/accountLoginPage/Operations.jsx","Components/accountLoginPage/AccountHeroLoggedIn.jsx","Components/accountLoginPage/AccountLoggedIn.jsx","Components/bankLoginPage/AccountListBank.jsx","Components/bankLoginPage/BankHeroLoggedIn.jsx","Components/bankLoginPage/BankLoggedIn.jsx","Components/personLoginPage/PersonHeroLoggedIn.jsx","Components/personLoginPage/PersonLoggedIn.jsx","reducers/personReducer.js","reducers/bankReducer.js","reducers/accountReducer.js","reducers/errorReducer.js","reducers/transactionReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js","Media/logo_transparent.png","Media/green-sphere-312.png","Media/orange_sphere-312.png"],"names":["module","exports","Logo","src","logo","alt","style","width","Transition","React","forwardRef","props","ref","Slide","direction","StyledButton","withStyles","root","background","borderRadius","borderWidth","borderStyle","border","color","height","padding","fontSize","fontWeight","letterSpacing","lineHeight","borderColor","Button","SmallerStyledButton","whiteSpace","connect","state","personsList","persons","items","banksList","banks","accountsList","accounts","type","history","useHistory","useState","bankOrPerson","setBankOrPerson","openDialog","setOpenDialog","isSelectDisabled","setIsSelectDisabled","useEffect","length","name","accountNumber","handleClickOpenDialog","handleCloseDialog","onClick","Dialog","open","onClose","aria-labelledby","TransitionComponent","keepMounted","maxWidth","fullWidth","DialogTitle","id","DialogContent","InputLabel","htmlFor","charAt","toUpperCase","slice","Select","native","value","onChange","event","target","input","Input","disabled","map","person","index","key","bank","account","DialogActions","push","pathname","useStyles","makeStyles","theme","subheader","fontFamily","nested","paddingLeft","spacing","lightText","bigAvatar","subDivider","backgroundColor","marginRight","marginLeft","StyledListItemText","ListItemText","Lists","classes","List","component","className","ListSubheader","Divider","variant","overflow","ListItem","ListItemAvatar","Avatar","OrangeSphere","primary","disableTypography","defaultProps","handleOpenDialog","role","tabIndex","onKeyDown","Box","Navbar","login","isDesktopOrLaptop","useMediaQuery","query","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Chip","onDelete","avatar","PurpleSphere","label","getBanks","dispatch","a","axios","get","response","payload","data","getPersons","Alert","elevation","Create","createBank","createPerson","createAccount","pName","errors","bankName","setBankName","personName","setPersonName","openSnackBar","setOpenSnackBar","handleCloseSnackBar","reason","handleChangeName","TextField","autoFocus","margin","helperText","setTimeout","Snackbar","autoHideDuration","severity","error","message","item","post","code","Hero","isTabletOrBigger","data-stellar-background-ratio","flexWrap","marginBottom","Footer","Typography","backgroundImage","HeroBg","moment","require","CssTextField","borderBottom","depositMoney","fee","put","TransactionTime","transaction","Amount","Code","balance","withdrawMoney","transferMoney","accountFrom","accountTo","transactionsList","isTabletOrHigher","setAccountTo","amount","setAmount","renderRow","GreenSphere","substring","calendar","secondary","renderRowTransfer","maxHeight","itemSize","itemCount","InputLabelProps","shrink","e","size","onPress","anchorOrigin","vertical","horizontal","transactions","getTransactions","filter","t","getBalanceOfAccount","location","SliderBG","backgroundPosition","backgroundAttachment","backgroundSize","Object","keys","totalBalance","getAccountsFromBank","getBalanceOfBank","wavesBG","getAccountsFromPerson","PersonBG","opacity","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","path","exact","Main","AccountLoggedIn","PersonLoggedIn","BankLoggedIn","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eb2b580.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/purple-sphere-312.db6a4d10.png\";","module.exports = __webpack_public_path__ + \"static/media/hero-bg-3840.d428f599.png\";","module.exports = __webpack_public_path__ + \"static/media/waves-slider-blue-6176.b352b333.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-waves-1024.66ac7bf3.png\";","module.exports = __webpack_public_path__ + \"static/media/microphone.faf847d4.png\";","import React from \"react\";\r\nimport logo from \"../Media/logo_transparent.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <img src={logo} alt=\"logo\" style={{ width: \"60px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background: \"#18122B\",\r\n    borderRadius: 40,\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"10px 39px 11px 40px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: 900,\r\n    letterSpacing: \"2px\",\r\n    lineHeight: \"12px\",\r\n    borderColor: \"rgba(155, 171, 255, 0.3)\",\r\n  },\r\n})(Button);\r\n\r\nconst SmallerStyledButton = withStyles({\r\n  root: {\r\n    background: \"#18122B\",\r\n    borderRadius: 40,\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 38,\r\n    padding: \"10px 39px 11px 40px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: 900,\r\n    letterSpacing: \"2px\",\r\n    lineHeight: \"12px\",\r\n    borderColor: \"rgba(155, 171, 255, 0.3)\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n})(Button);\r\n\r\nfunction Login({ type, personsList, banksList, accountsList }) {\r\n  const history = useHistory();\r\n  const [bankOrPerson, setBankOrPerson] = React.useState();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [isSelectDisabled, setIsSelectDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case \"person\":\r\n        if (personsList.length > 0) {\r\n          setIsSelectDisabled(false);\r\n          setBankOrPerson(personsList[0].name);\r\n        } else {\r\n          setIsSelectDisabled(true);\r\n        }\r\n        break;\r\n      case \"bank\":\r\n        if (banksList.length > 0) {\r\n          setIsSelectDisabled(false);\r\n          setBankOrPerson(banksList[0].name);\r\n        } else {\r\n          setIsSelectDisabled(true);\r\n        }\r\n        break;\r\n      case \"account\":\r\n        if (accountsList.length > 0) {\r\n          setIsSelectDisabled(false);\r\n          setBankOrPerson(accountsList[0].accountNumber);\r\n        } else {\r\n          setIsSelectDisabled(true);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type, accountsList, personsList, banksList]);\r\n\r\n  const handleLoginClick = () => {\r\n    history.push({\r\n      pathname: `/${type}-login`,\r\n      state: { type, name: bankOrPerson },\r\n    });\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setBankOrPerson(event.target.value || \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {type === \"account\" ? (\r\n        <SmallerStyledButton onClick={handleClickOpenDialog}>\r\n          Login {type}\r\n        </SmallerStyledButton>\r\n      ) : (\r\n        <StyledButton onClick={handleClickOpenDialog}>\r\n          Login {type}\r\n        </StyledButton>\r\n      )}\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Login as {type}</DialogTitle>\r\n        <DialogContent>\r\n          <InputLabel htmlFor=\"demo-dialog-native\">\r\n            {`${type.charAt(0).toUpperCase() + type.slice(1)}s`}\r\n          </InputLabel>\r\n          <Select\r\n            native\r\n            value={bankOrPerson}\r\n            onChange={handleChange}\r\n            input={<Input id=\"demo-dialog-native\" />}\r\n            fullWidth\r\n            disabled={isSelectDisabled}\r\n          >\r\n            {type === \"person\" &&\r\n              personsList.map((person, index) => {\r\n                return (\r\n                  // eslint-disable-next-line react/no-array-index-key\r\n                  <option key={index} value={person.name}>\r\n                    {person.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            {type === \"bank\" &&\r\n              banksList.map((bank, index) => {\r\n                return (\r\n                  // eslint-disable-next-line react/no-array-index-key\r\n                  <option key={index} value={bank.name}>\r\n                    {bank.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            {type === \"account\" &&\r\n              accountsList.map((account, index) => {\r\n                return (\r\n                  <option\r\n                    key={account.accountNumber || index}\r\n                    value={account.accountNumber}\r\n                  >\r\n                    {account.accountNumber}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleLoginClick}>\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  banksList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  personsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  personsList: state.persons.items,\r\n  banksList: state.banks.items,\r\n  accountsList: state.accounts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Login);\r\n","import React from \"react\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport PropTypes from \"prop-types\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport OrangeSphere from \"../Media/orange_sphere-312.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  subheader: {\r\n    color: \"#8f9cec\",\r\n    fontFamily: \"Heebo, Arial !important\",\r\n    fontSize: \"36px\",\r\n    fontWeight: \"bold\",\r\n    lineHeight: \"47px\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  lightText: {\r\n    color: \"#87BBC1 !important\",\r\n  },\r\n\r\n  bigAvatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  subDivider: {\r\n    backgroundColor: \"#9BAAFC !important\",\r\n    marginRight: \"30px !important\",\r\n    marginLeft: \"30px !important\",\r\n  },\r\n}));\r\n\r\nconst StyledListItemText = withStyles({\r\n  root: {\r\n    color: \"#9BAAFC\",\r\n    fontFamily: \"Open Sans ,sans-serif !important\",\r\n    fontSize: \"16px !important\",\r\n    fontWeight: 1000,\r\n    letterSpacing: \"0.45px\",\r\n    lineHeight: \"25px\",\r\n  },\r\n})(ListItemText);\r\n\r\nconst Lists = ({ subheader, persons, banks }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      className={classes.root}\r\n      subheader={\r\n        // eslint-disable-next-line react/jsx-wrap-multilines\r\n        <ListSubheader\r\n          component=\"div\"\r\n          id=\"nested-list-subheader\"\r\n          className={`${classes.subheader} ${\"text-center\"}`}\r\n        >\r\n          {subheader}\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      <Divider variant=\"middle\" component=\"li\" className={classes.subDivider} />\r\n\r\n      <div style={{ height: \"68vh\", overflow: \"scroll\" }}>\r\n        {persons.length > 0\r\n          ? persons.map((person, index) => {\r\n              return (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <ListItem key={index}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt=\"oragesphere\"\r\n                      src={OrangeSphere}\r\n                      className={classes.bigAvatar}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <StyledListItemText\r\n                    primary={person.name}\r\n                    className=\"pl-2\"\r\n                    disableTypography\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })\r\n          : banks.map((bank, index) => {\r\n              return (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <ListItem key={index}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt=\"oragesphere\"\r\n                      src={OrangeSphere}\r\n                      className={classes.bigAvatar}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <StyledListItemText\r\n                    primary={bank.name}\r\n                    className=\"pl-2\"\r\n                    disableTypography\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n      </div>\r\n    </List>\r\n  );\r\n};\r\n\r\nLists.propTypes = {\r\n  subheader: PropTypes.string.isRequired,\r\n  banks: PropTypes.arrayOf(PropTypes.object),\r\n  persons: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nLists.defaultProps = {\r\n  banks: [],\r\n  persons: [],\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Lists from \"./Lists\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ListContainer({ personsList, banksList }) {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n      <a\r\n        role=\"button\"\r\n        tabIndex=\"-1\"\r\n        className=\"nav-link active\"\r\n        onKeyDown={handleOpenDialog}\r\n        onClick={handleOpenDialog}\r\n      >\r\n        <span>Banks & Users</span>\r\n      </a>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogContent>\r\n          <div>\r\n            <Box className=\"\">\r\n              <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                  <div className=\"col-md-6\">\r\n                    <Lists subheader=\"Persons\" persons={personsList} />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Lists subheader=\"Banks\" banks={banksList} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nListContainer.propTypes = {\r\n  personsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  banksList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  personsList: state.persons.items,\r\n  banksList: state.banks.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ListContainer);\r\n","import React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\nimport Login from \"./Login\";\r\nimport PurpleSphere from \"../Media/purple-sphere-312.png\";\r\nimport ListContainer from \"./ListContainer\";\r\n\r\nconst Navbar = ({ login, bankOrPerson }) => {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg site-navbar navbar-light bg-light\"\r\n      id=\"pb-navbar\"\r\n    >\r\n      {isDesktopOrLaptop && (\r\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n        <a className=\"navbar-brand ml-md-5 pl-md-5\">\r\n          <Logo />\r\n        </a>\r\n      )}\r\n      <div className=\"container\">\r\n        <button\r\n          className=\"navbar-toggler collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample09\"\r\n          aria-controls=\"navbarsExample09\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div\r\n          className=\"navbar-collapse  justify-content-md-end  collapse mr-md-5 pr-md-5\"\r\n          id=\"navbarsExample09\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <ListContainer />\r\n            </li>\r\n\r\n            {!login ? (\r\n              <>\r\n                <li className=\"nav-item mr-3\">\r\n                  <Login type=\"bank\" />\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Login type=\"person\" />\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className=\"nav-item ml-2 mt-1\">\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    onDelete={handleLogout}\r\n                    avatar={<Avatar src={PurpleSphere} />}\r\n                    label={bankOrPerson}\r\n                  />\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  login: PropTypes.bool,\r\n  bankOrPerson: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  login: false,\r\n  bankOrPerson: \"\",\r\n};\r\n\r\nexport default Navbar;\r\n","import axios from \"axios\";\r\nimport { GET_BANKS, ADD_BANK, ADD_ERROR, GET_BALANCE_BANK } from \"./types\";\r\n\r\nexport const getBanks = () => async (dispatch) => {\r\n  const response = await axios.get(`https://banksim.herokuapp.com/bank`);\r\n  dispatch({ type: GET_BANKS, payload: response.data });\r\n};\r\n\r\nexport const getBalanceOfBank = (bankName) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://banksim.herokuapp.com/bank/balance/${bankName}`\r\n  );\r\n  dispatch({ type: GET_BALANCE_BANK, payload: response.data });\r\n};\r\n\r\nexport const createBank = (bankName) => async (dispatch) => {\r\n  const response = await axios.post(\r\n    `https://banksim.herokuapp.com/bank/${bankName}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({\r\n      type: ADD_BANK,\r\n      payload: { code: response.data.code, name: bankName },\r\n    });\r\n  }\r\n};\r\n","export const GET_PERSONS = \"GET_PERSONS\";\r\nexport const GET_BANKS = \"GET_BANKS\";\r\nexport const GET_BALANCE_BANK = \"GET_BALANCE_BANK\";\r\nexport const GET_BALANCE_ACCOUNT = \"GET_BALANCE_ACCOUNT\";\r\nexport const ADD_PERSON = \"ADD_PERSON\";\r\nexport const ADD_BANK = \"ADD_BANK\";\r\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\r\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const ADD_ERROR = \"ADD_ERROR\";\r\nexport const ADD_TRANSACTION = \"ADD_TRANSACTION\";\r\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\r\nexport const RESET_ERRORS = \"RESET_ERRORS\";\r\nexport const RESET_ACCOUNTS = \"RESET_ACCOUNTS\";\r\nexport const RESET_TRANSACTIONS = \"RESET_TRANSACTIONS\";\r\n\r\n/* export const DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\r\nexport const SEARCH_MESSAGE = \"SEARCH_MESSAGE\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const SET_USERS = \"SET_USERS\";\r\nexport const SET_ROOM = \"SET_ROOM\";\r\nexport const SET_USER_TYPING = \"SET_USER_TYPING\"; */\r\n","import axios from \"axios\";\r\nimport { GET_PERSONS, ADD_PERSON, ADD_ERROR, RESET_ERRORS } from \"./types\";\r\n\r\nexport const getPersons = () => async (dispatch) => {\r\n  const response = await axios.get(`https://banksim.herokuapp.com/person`);\r\n  dispatch({\r\n    type: GET_PERSONS,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const createPerson = (personName) => async (dispatch) => {\r\n  const response = await axios.post(\r\n    `https://banksim.herokuapp.com/person/${personName}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({ type: ADD_PERSON, payload: { name: personName } });\r\n  }\r\n};\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-shadow */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { connect } from \"react-redux\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { createBank } from \"../actions/bankActions\";\r\nimport { createPerson } from \"../actions/personActions\";\r\nimport { createAccount } from \"../actions/accountActions\";\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background: \"#18122B\",\r\n    borderRadius: 40,\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 38,\r\n    padding: \"10px 39px 11px 40px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: 900,\r\n    letterSpacing: \"2px\",\r\n    lineHeight: \"12px\",\r\n    borderColor: \"rgba(155, 171, 255, 0.3)\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n})(Button);\r\n\r\nfunction Alert(props) {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Create({\r\n  type,\r\n  banksList,\r\n  createBank,\r\n  createPerson,\r\n  createAccount,\r\n  pName,\r\n  errors,\r\n}) {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [bankName, setBankName] = useState(\"\");\r\n  const [personName, setPersonName] = useState(\"\");\r\n  const [openSnackBar, setOpenSnackBar] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (type === \"account\" && banksList.length > 0) {\r\n      setBankName(banksList[0].name);\r\n    }\r\n  }, [type, banksList]);\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  function create() {\r\n    switch (type) {\r\n      case \"bank\":\r\n        createBank(bankName);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        setBankName(\"\");\r\n        break;\r\n      case \"person\":\r\n        createPerson(personName);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        setPersonName(\"\");\r\n        break;\r\n      case \"account\":\r\n        createAccount(bankName, pName);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    handleCloseDialog();\r\n  }\r\n\r\n  const handleChangeName = (event) => {\r\n    switch (type) {\r\n      case \"bank\":\r\n        setBankName(event.target.value);\r\n        break;\r\n      case \"person\":\r\n        setPersonName(event.target.value);\r\n        break;\r\n      case \"account\":\r\n        setBankName(event.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledButton\r\n        onClick={handleClickOpenDialog}\r\n        style={{ whiteSpace: `${isDesktopOrLaptop ? \"\" : \"normal\"}` }}\r\n      >\r\n        {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n        Create {type}\r\n      </StyledButton>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      >\r\n        {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n        <DialogTitle id=\"form-dialog-title\">Create {type}</DialogTitle>\r\n        <DialogContent>\r\n          {type === \"account\" ? (\r\n            <Select\r\n              native\r\n              value={bankName}\r\n              onChange={handleChangeName}\r\n              input={<Input id=\"demo-dialog-native\" />}\r\n              label=\"Bank\"\r\n              fullWidth\r\n              disabled={banksList.length < 1}\r\n            >\r\n              {banksList.map((bank, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <option key={index} value={bank.name}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          ) : (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label={`${type === \"bank\" ? \"Bank name\" : \"Person name\"}`}\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChangeName}\r\n              value={type === \"bank\" ? bankName : personName}\r\n              helperText={`${\"Please choose a  \"} ${\r\n                type === \"bank\" ? \"bank name\" : \"person name\"\r\n              }`}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={create}>\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={openSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseSnackBar}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseSnackBar}\r\n          severity={errors.error ? \"error\" : \"success\"}\r\n        >\r\n          {errors.error\r\n            ? errors.message\r\n            : `${\r\n                type.charAt(0).toUpperCase() + type.slice(1)\r\n              } created successfully!`}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\nCreate.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  banksList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  createBank: PropTypes.func.isRequired,\r\n  createPerson: PropTypes.func.isRequired,\r\n  createAccount: PropTypes.func.isRequired,\r\n  pName: PropTypes.string,\r\n};\r\n\r\nCreate.defaultProps = {\r\n  pName: \"\",\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  banksList: state.banks.items,\r\n  accounts: state.accounts.items,\r\n  errors: state.errors.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createPerson,\r\n  createBank,\r\n  createAccount,\r\n})(Create);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ACCOUNTS,\r\n  ADD_ACCOUNT,\r\n  ADD_ERROR,\r\n  GET_BALANCE_ACCOUNT,\r\n  RESET_ERRORS,\r\n  RESET_ACCOUNTS,\r\n} from \"./types\";\r\n\r\nexport const getAccountsFromPerson = (personName) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://banksim.herokuapp.com/account/list/person/${personName}`\r\n  );\r\n\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n    dispatch({ type: RESET_ACCOUNTS });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({ type: GET_ACCOUNTS, payload: response.data.data });\r\n  }\r\n};\r\n\r\nexport const getAccountsFromBank = (bankName) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://banksim.herokuapp.com/account/list/bank/${bankName}`\r\n  );\r\n\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n    dispatch({ type: RESET_ACCOUNTS });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({ type: GET_ACCOUNTS, payload: response.data.data });\r\n  }\r\n};\r\n\r\nexport const getBalanceOfAccount = (accountNumber) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://banksim.herokuapp.com/account/balance/${accountNumber}`\r\n  );\r\n\r\n  dispatch({ type: GET_BALANCE_ACCOUNT, payload: response.data });\r\n};\r\n\r\nexport const createAccount = (bankName, personName) => async (dispatch) => {\r\n  const response = await axios.post(\r\n    `https://banksim.herokuapp.com/account/${bankName}/${personName}`\r\n  );\r\n\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({ type: ADD_ACCOUNT, payload: response.data });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Logo from \"../../Media/logo_transparent.png\";\r\nimport Create from \"../Create\";\r\n\r\nconst Hero = () => {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const isTabletOrBigger = useMediaQuery({\r\n    query: \"(min-device-width: 768px)\",\r\n  });\r\n  return (\r\n    <>\r\n      <section\r\n        className=\"site-hero \"\r\n        id=\"section-home\"\r\n        data-stellar-background-ratio=\"0.5\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-between\">\r\n            <div className=\"col-md-5 d-flex flex-column  justify-content-center align-items-start  pl-lg-5\">\r\n              <h1>Welcome to BankSim!</h1>\r\n              <p className=\"hero-subtitle\">\r\n                A bank simulator where you can create users, banks, accounts and\r\n                deposit, withdraw, transfer money and more!\r\n              </p>\r\n              <div\r\n                className=\"mt-4 d-flex\"\r\n                style={{\r\n                  flexWrap: `${isDesktopOrLaptop ? \"\" : \"wrap\"}`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"col-md-6 col-lg-6 \"\r\n                  style={{\r\n                    paddingLeft: `${isTabletOrBigger ? \"0px\" : \"20vw\"}`,\r\n                    marginBottom: `${isTabletOrBigger ? \"0px\" : \"5vh\"}`,\r\n                  }}\r\n                >\r\n                  <Create type=\"person\" />\r\n                </div>\r\n                <div\r\n                  className=\"col-md-6 col-lg-6 pl-md-3\"\r\n                  style={{\r\n                    paddingLeft: `${isTabletOrBigger ? \"0px\" : \"20vw\"}`,\r\n                  }}\r\n                >\r\n                  <Create type=\"bank\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {isTabletOrBigger && (\r\n              <div className=\"col-md-4 d-flex justify-content-center align-items-center\">\r\n                <img src={Logo} alt=\"logo\" className=\"logo-img\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 text-right\">\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"caption\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Made by Ali Shadman\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Element } from \"react-scroll\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navbar from \"./Navbar\";\r\nimport Hero from \"./mainPage/Hero\";\r\nimport Footer from \"./Footer\";\r\nimport HeroBg from \"../Media/hero-bg-3840.png\";\r\nimport { getBanks } from \"../actions/bankActions\";\r\nimport { getPersons } from \"../actions/personActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction Main({ getPersons, getBanks }) {\r\n  useEffect(() => {\r\n    getPersons();\r\n    getBanks();\r\n  }, [getPersons, getBanks]);\r\n  return (\r\n    <div className=\"hero-bg \" style={{ backgroundImage: `url(${HeroBg})` }}>\r\n      <Navbar login={false} />\r\n      <Element id=\"home\" name=\"home\">\r\n        <Hero />\r\n      </Element>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  getPersons: PropTypes.func.isRequired,\r\n  getBanks: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getPersons, getBanks })(Main);\r\n","/* eslint-disable no-shadow */\r\nimport React, { useState } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { connect } from \"react-redux\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport GreenSphere from \"../../Media/green-sphere-312.png\";\r\nimport {\r\n  depositMoney,\r\n  withdrawMoney,\r\n  transferMoney,\r\n} from \"../../actions/transactionActions\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"1px solid #9FBFF5\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#9FBFF5\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction Alert(props) {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Operation = ({\r\n  type,\r\n  accountNumber,\r\n  depositMoney,\r\n  errors,\r\n  withdrawMoney,\r\n  transferMoney,\r\n  transactionsList,\r\n}) => {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n\r\n  const isTabletOrHigher = useMediaQuery({ query: \"(min-width: 768px)\" });\r\n  const [accountTo, setAccountTo] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [openSnackBar, setOpenSnackBar] = React.useState(false);\r\n\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const handleChangeAccountTo = (event) => {\r\n    setAccountTo(event.target.value);\r\n  };\r\n\r\n  const handleOperationClick = () => {\r\n    switch (type) {\r\n      case \"deposit\":\r\n        depositMoney(accountNumber, amount);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        break;\r\n      case \"withdraw\":\r\n        withdrawMoney(accountNumber, amount);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        break;\r\n      case \"transfer\":\r\n        transferMoney(accountNumber, accountTo, amount);\r\n        setTimeout(() => {\r\n          setOpenSnackBar(true);\r\n        }, 2000);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setAmount(\"\");\r\n    setAccountTo(\"\");\r\n  };\r\n\r\n  function renderRow(props) {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { index, style } = props;\r\n\r\n    return (\r\n      <ListItem style={style}>\r\n        <ListItemAvatar>\r\n          <Avatar src={GreenSphere} key={index} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            !isDesktopOrLaptop\r\n              ? moment(transactionsList[index].TransactionTime).calendar()\r\n              : transactionsList[index].TransactionTime.substring(\r\n                  0,\r\n                  transactionsList[index].TransactionTime.length - 3\r\n                )\r\n          }\r\n          secondary={transactionsList[index].Amount}\r\n        />\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  function renderRowTransfer(props) {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { index, style } = props;\r\n\r\n    return (\r\n      <ListItem style={style}>\r\n        <ListItemAvatar>\r\n          <Avatar src={GreenSphere} key={index} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            !isDesktopOrLaptop\r\n              ? moment(transactionsList[index].TransactionTime).calendar()\r\n              : transactionsList[index].TransactionTime.substring(\r\n                  0,\r\n                  transactionsList[index].TransactionTime.length - 3\r\n                )\r\n          }\r\n          secondary={transactionsList[index].Amount}\r\n        />\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ maxHeight: \"10vh\" }}>\r\n        <div className=\"col-md-12 d-flex flex-column align-items-start pt-3 pl-4\">\r\n          <h1>{type.charAt(0).toUpperCase() + type.slice(1)}</h1>\r\n        </div>\r\n      </div>\r\n      <Divider\r\n        variant=\"middle\"\r\n        className={`${\r\n          type === \"transfer\" ? \"lightest-divider\" : \"light-divider\"\r\n        }`}\r\n      />\r\n      <div\r\n        className=\"row mt-2 mb-2\"\r\n        style={{ maxHeight: `${type === \"transfer\" ? \"29vh\" : \"35vh\"}` }}\r\n      >\r\n        <AutoSizer>\r\n          {({ height, width }) => (\r\n            <FixedSizeList\r\n              height={height}\r\n              width={width}\r\n              itemSize={65}\r\n              itemCount={transactionsList.length}\r\n            >\r\n              {type === \"transfer\" ? renderRowTransfer : renderRow}\r\n            </FixedSizeList>\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n      <Divider\r\n        variant=\"middle\"\r\n        className={`${\r\n          type === \"transfer\" ? \"lightest-divider\" : \"light-divider\"\r\n        }`}\r\n      />\r\n      {type === \"transfer\" && (\r\n        <div\r\n          className=\"row mt-2 mb-sm-2\"\r\n          style={{ maxHeight: `${isTabletOrHigher ? \"10vh\" : \"20vh\"}` }}\r\n        >\r\n          <div className=\"col-md-12  pt-1 \">\r\n            <CssTextField\r\n              id=\"standard-select\"\r\n              label=\"To\"\r\n              value={accountTo}\r\n              onChange={handleChangeAccountTo}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={`${\"row mt-2 nowrap-input\"} ${\r\n          type === \"transfer\" ? \"mb-1\" : \"\"\r\n        }`}\r\n        style={{ maxHeight: \"10vh\" }}\r\n      >\r\n        <div className=\"col-lg-8 col-md-6 col-sm-4 pt-1 \">\r\n          <CssTextField\r\n            id=\"standard-select-currency3\"\r\n            label=\"Amount\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-6 col-sm-4 pt-2\">\r\n          <AwesomeButton\r\n            size=\"small\"\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#85b8e4 !important\" }}\r\n            onPress={handleOperationClick}\r\n          >\r\n            {type.charAt(0).toUpperCase() + type.slice(1)}\r\n          </AwesomeButton>\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        open={openSnackBar}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseSnackBar}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseSnackBar}\r\n          severity={errors.error ? \"error\" : \"success\"}\r\n        >\r\n          {/* eslint-disable-next-line no-nested-ternary */}\r\n          {errors.error\r\n            ? errors.message.name\r\n              ? errors.message.name\r\n              : errors.message\r\n            : `${type.charAt(0).toUpperCase() + type.slice(1)} successfull!`}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nOperation.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  accountNumber: PropTypes.string.isRequired,\r\n  depositMoney: PropTypes.func.isRequired,\r\n  withdrawMoney: PropTypes.func.isRequired,\r\n  transferMoney: PropTypes.func.isRequired,\r\n  transactionsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ errors: state.errors.item });\r\n\r\nexport default connect(mapStateToProps, {\r\n  depositMoney,\r\n  withdrawMoney,\r\n  transferMoney,\r\n})(Operation);\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TRANSACTION,\r\n  GET_BALANCE_ACCOUNT,\r\n  ADD_ERROR,\r\n  RESET_ERRORS,\r\n  GET_TRANSACTIONS,\r\n  RESET_TRANSACTIONS,\r\n} from \"./types\";\r\n\r\nexport const getTransactions = (accountNumber) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://banksim.herokuapp.com/account/transactions/${accountNumber}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n    dispatch({ type: RESET_TRANSACTIONS });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({ type: GET_TRANSACTIONS, payload: response.data.data });\r\n  }\r\n};\r\n\r\nexport const depositMoney = (accountNumber, fee) => async (dispatch) => {\r\n  const response = await axios.put(\r\n    `https://banksim.herokuapp.com/account/deposit/${accountNumber}/${fee}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({\r\n      type: ADD_TRANSACTION,\r\n      payload: {\r\n        TransactionTime: response.data.transaction[0].TransactionTime,\r\n        Amount: response.data.transaction[0].Amount,\r\n        Code: \"deposit\",\r\n      },\r\n    });\r\n    dispatch({\r\n      type: GET_BALANCE_ACCOUNT,\r\n      payload: response.data.balance[0].balance,\r\n    });\r\n  }\r\n};\r\n\r\nexport const withdrawMoney = (accountNumber, fee) => async (dispatch) => {\r\n  const response = await axios.put(\r\n    `https://banksim.herokuapp.com/account/withdraw/${accountNumber}/${fee}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({\r\n      type: ADD_TRANSACTION,\r\n      payload: {\r\n        TransactionTime: response.data.transaction[0].TransactionTime,\r\n        Amount: response.data.transaction[0].Amount,\r\n        Code: \"withdraw\",\r\n      },\r\n    });\r\n    dispatch({\r\n      type: GET_BALANCE_ACCOUNT,\r\n      payload: response.data.balance[0].balance,\r\n    });\r\n  }\r\n};\r\nexport const transferMoney = (accountFrom, accountTo, fee) => async (\r\n  dispatch\r\n) => {\r\n  const response = await axios.put(\r\n    `https://banksim.herokuapp.com/account/transfer/${accountFrom}/${accountTo}/${fee}`\r\n  );\r\n  if (response.data.error) {\r\n    dispatch({ type: ADD_ERROR, payload: response.data });\r\n  } else {\r\n    dispatch({ type: RESET_ERRORS });\r\n    dispatch({\r\n      type: ADD_TRANSACTION,\r\n      payload: {\r\n        TransactionTime: response.data.transaction[0].TransactionTime,\r\n        Amount: response.data.transaction[0].Amount,\r\n        Code: \"transfer\",\r\n      },\r\n    });\r\n    dispatch({\r\n      type: GET_BALANCE_ACCOUNT,\r\n      payload: response.data.balance[1].balance,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Operation from \"./Operation\";\r\nimport { getTransactions } from \"../../actions/transactionActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nconst Operations = ({ accountNumber, transactionsList, getTransactions }) => {\r\n  useEffect(() => {\r\n    getTransactions(accountNumber);\r\n  }, [accountNumber, getTransactions]);\r\n  return (\r\n    <div className=\"row  justify-content-center loggedin-hero\">\r\n      <div className=\"col-md-3 mb-sm-2 operations-box op-left mt-3\">\r\n        <Operation\r\n          type=\"deposit\"\r\n          accountNumber={accountNumber}\r\n          transactionsList={transactionsList.filter((t) => {\r\n            return t.Code === \"deposit\";\r\n          })}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-3 operations-box op-center\">\r\n        <Operation\r\n          type=\"transfer\"\r\n          accountNumber={accountNumber}\r\n          transactionsList={transactionsList.filter((t) => {\r\n            return t.Code === \"transfer\";\r\n          })}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-3 operations-box op-right mt-md-3\">\r\n        <Operation\r\n          type=\"withdraw\"\r\n          accountNumber={accountNumber}\r\n          transactionsList={transactionsList.filter((t) => {\r\n            return t.Code === \"withdraw\";\r\n          })}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOperations.propTypes = {\r\n  accountNumber: PropTypes.string.isRequired,\r\n  getTransactions: PropTypes.func.isRequired,\r\n  transactionsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  transactionsList: state.transactions.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTransactions })(Operations);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Operations from \"./Operations\";\r\nimport { getBalanceOfAccount } from \"../../actions/accountActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction AccountHeroLoggedIn({ accountNumber, getBalanceOfAccount, balance }) {\r\n  useEffect(() => {\r\n    getBalanceOfAccount(accountNumber);\r\n  }, [getBalanceOfAccount, accountNumber]);\r\n  return (\r\n    <>\r\n      <section\r\n        className=\"site-hero loggedin-hero\"\r\n        id=\"section-home\"\r\n        data-stellar-background-ratio=\"0.5\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-5 text-center flex-column align-self-start mt-5 pt-5 justify-content-center d-flex align-items-center\">\r\n              {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n              <h1>Welcome {accountNumber}</h1>\r\n              <p className=\"hero-subtitle balance\">{balance}</p>\r\n            </div>\r\n            <Operations accountNumber={accountNumber} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nAccountHeroLoggedIn.propTypes = {\r\n  accountNumber: PropTypes.string.isRequired,\r\n  getBalanceOfAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  balance: state.accounts.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBalanceOfAccount })(\r\n  AccountHeroLoggedIn\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Element } from \"react-scroll\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navbar from \"../Navbar\";\r\nimport Footer from \"../Footer\";\r\nimport AccountHeroLoggedIn from \"./AccountHeroLoggedIn\";\r\nimport SliderBG from \"../../Media/waves-slider-blue-6176.png\";\r\nimport { getBanks } from \"../../actions/bankActions\";\r\nimport { getPersons } from \"../../actions/personActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction AccountLoggedIn({ location, getBanks, getPersons }) {\r\n  useEffect(() => {\r\n    getPersons();\r\n    getBanks();\r\n  }, [getPersons, getBanks]);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${SliderBG})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundAttachment: \"fixed\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Navbar login bankOrPerson={location.state.name} />\r\n      <Element id=\"home\" name=\"home\">\r\n        <AccountHeroLoggedIn accountNumber={location.state.name} />\r\n      </Element>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nAccountLoggedIn.propTypes = {\r\n  location: PropTypes.shape({ state: PropTypes.object }).isRequired,\r\n  getBanks: PropTypes.func.isRequired,\r\n  getPersons: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getPersons, getBanks })(AccountLoggedIn);\r\n","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport GreenSphere from \"../../Media/green-sphere-312.png\";\r\n\r\nfunction AccountListBank({ bankName, accountsList, errors }) {\r\n  function renderRow(props) {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { index, style } = props;\r\n\r\n    return (\r\n      <ListItem style={style}>\r\n        <ListItemAvatar>\r\n          <Avatar src={GreenSphere} key={index} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={`${accountsList[index].personName} / ${accountsList[index].accountNumber} `}\r\n          secondary={accountsList[index].balance}\r\n        />\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12 operations-box op-center\">\r\n      <div className=\"row\" style={{ maxHeight: \"15vh\" }}>\r\n        <div className=\"col-md-12 d-flex flex-column align-items-start pt-3 pl-4\">\r\n          <p\r\n            className=\"hero-subtitle light-text\"\r\n            style={{\r\n              marginBottom: \"0px\",\r\n              fontSize: \"12px\",\r\n              fontWeight: \"900\",\r\n            }}\r\n          >\r\n            {bankName}\r\n          </p>\r\n          <h1>Accounts list</h1>\r\n        </div>\r\n      </div>\r\n      <Divider variant=\"middle\" className=\"light-divider\" />\r\n      <div className=\"row mt-2 mb-2\" style={{ maxHeight: \"40vh\" }}>\r\n        {Object.keys(errors).length > 0 ? (\r\n          <p className=\"pl-4\">{errors.message}</p>\r\n        ) : (\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n              <FixedSizeList\r\n                height={height}\r\n                width={width}\r\n                itemSize={56}\r\n                itemCount={accountsList.length}\r\n              >\r\n                {renderRow}\r\n              </FixedSizeList>\r\n            )}\r\n          </AutoSizer>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAccountListBank.propTypes = {\r\n  bankName: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ errors: state.errors.item });\r\nexport default connect(mapStateToProps, {})(AccountListBank);\r\n","/* eslint-disable no-shadow */\r\nimport React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport AccountListBank from \"./AccountListBank\";\r\nimport { getAccountsFromBank } from \"../../actions/accountActions\";\r\nimport { getBalanceOfBank } from \"../../actions/bankActions\";\r\n\r\nfunction BankHeroLoggedIn({\r\n  bankName,\r\n  accountsList,\r\n  getAccountsFromBank,\r\n  getBalanceOfBank,\r\n  // eslint-disable-next-line react/prop-types\r\n  totalBalance,\r\n}) {\r\n  useEffect(() => {\r\n    getAccountsFromBank(bankName);\r\n    getBalanceOfBank(bankName);\r\n  }, [bankName, getAccountsFromBank, getBalanceOfBank]);\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className=\"site-hero loggedin-hero\"\r\n        id=\"section-home\"\r\n        data-stellar-background-ratio=\"0.5\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-12 text-center flex-column align-self-start mt-5 pt-5 justify-content-center d-flex align-items-center\">\r\n              {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n              <h1>Welcome {bankName}</h1>\r\n              <p className=\"hero-subtitle balance\">{totalBalance}</p>\r\n              <AccountListBank\r\n                bankName={bankName}\r\n                accountsList={accountsList}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nBankHeroLoggedIn.propTypes = {\r\n  bankName: PropTypes.string.isRequired,\r\n  getAccountsFromBank: PropTypes.func.isRequired,\r\n  getBalanceOfBank: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  accountsList: state.accounts.items,\r\n  totalBalance: state.banks.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAccountsFromBank,\r\n  getBalanceOfBank,\r\n})(BankHeroLoggedIn);\r\n","import React, { useEffect } from \"react\";\r\nimport { Element } from \"react-scroll\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navbar from \"../Navbar\";\r\nimport BankHeroLoggedIn from \"./BankHeroLoggedIn\";\r\nimport Footer from \"../Footer\";\r\nimport wavesBG from \"../../Media/bg-waves-1024.png\";\r\nimport { getBanks } from \"../../actions/bankActions\";\r\nimport { getPersons } from \"../../actions/personActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction BankLoggedIn({ location, getBanks, getPersons }) {\r\n  useEffect(() => {\r\n    getPersons();\r\n    getBanks();\r\n  }, [getPersons, getBanks]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${wavesBG})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundAttachment: \"fixed\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Navbar login bankOrPerson={location.state.name} />\r\n      <Element id=\"home\" name=\"home\">\r\n        <BankHeroLoggedIn bankName={location.state.name} />\r\n      </Element>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nBankLoggedIn.propTypes = {\r\n  location: PropTypes.shape({ state: PropTypes.object, name: PropTypes.string })\r\n    .isRequired,\r\n  getBanks: PropTypes.func.isRequired,\r\n  getPersons: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getPersons, getBanks })(BankLoggedIn);\r\n","import React, { useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../../Media/logo_transparent.png\";\r\nimport Create from \"../Create\";\r\nimport Login from \"../Login\";\r\nimport { getAccountsFromPerson } from \"../../actions/accountActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction PersonHeroLoggedIn({ personName, getAccountsFromPerson }) {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-device-width: 1224px)\",\r\n  });\r\n  const isTabletOrBigger = useMediaQuery({\r\n    query: \"(min-device-width: 768px)\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccountsFromPerson(personName);\r\n  }, [getAccountsFromPerson, personName]);\r\n  return (\r\n    <>\r\n      <section\r\n        className=\"site-hero \"\r\n        id=\"section-home\"\r\n        data-stellar-background-ratio=\"0.5\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-between\">\r\n            <div className=\"col-md-5 d-flex flex-column pb-5 mb-5 justify-content-center align-items-start  pl-lg-5\">\r\n              {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n              <h1>Welcome {personName}</h1>\r\n              <p className=\"hero-subtitle\">Create an account or login!</p>\r\n              <div\r\n                className=\"mt-4 d-flex\"\r\n                style={{\r\n                  flexWrap: `${isDesktopOrLaptop ? \"\" : \"wrap\"}`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"col-md-6 col-lg-6\"\r\n                  style={{\r\n                    paddingLeft: `${isTabletOrBigger ? \"0px\" : \"20vw\"}`,\r\n                    marginBottom: `${isTabletOrBigger ? \"0px\" : \"5vh\"}`,\r\n                  }}\r\n                >\r\n                  <Create type=\"account\" pName={personName} />\r\n                </div>\r\n                <div\r\n                  className=\"col-md-6 col-lg-6 pl-md-3\"\r\n                  style={{\r\n                    paddingLeft: `${isTabletOrBigger ? \"0px\" : \"20vw\"}`,\r\n                    marginBottom: `${isTabletOrBigger ? \"0px\" : \"5vh\"}`,\r\n                  }}\r\n                >\r\n                  <Login type=\"account\" personName={personName} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {isTabletOrBigger && (\r\n              <div className=\"col-md-4 d-flex mb-5 pb-5 justify-content-center align-items-center\">\r\n                <img src={Logo} alt=\"logo\" className=\"logo-img\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nPersonHeroLoggedIn.propTypes = {\r\n  personName: PropTypes.string.isRequired,\r\n  getAccountsFromPerson: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getAccountsFromPerson })(PersonHeroLoggedIn);\r\n","import React, { useEffect } from \"react\";\r\nimport { Element } from \"react-scroll\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navbar from \"../Navbar\";\r\nimport Footer from \"../Footer\";\r\nimport PersonBG from \"../../Media/microphone.png\";\r\nimport PersonHeroLoggedIn from \"./PersonHeroLoggedIn\";\r\nimport { getBanks } from \"../../actions/bankActions\";\r\nimport { getPersons } from \"../../actions/personActions\";\r\n\r\n// eslint-disable-next-line no-shadow\r\nfunction PersonLoggedIn({ location, getPersons, getBanks }) {\r\n  useEffect(() => {\r\n    getPersons();\r\n    getBanks();\r\n  }, [getPersons, getBanks]);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${PersonBG})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundAttachment: \"fixed\",\r\n        backgroundSize: \"cover\",\r\n        opacity: 0.8,\r\n      }}\r\n    >\r\n      <Navbar login bankOrPerson={location.state.name} />\r\n      <Element id=\"home\" name=\"home\">\r\n        <PersonHeroLoggedIn personName={location.state.name} />\r\n      </Element>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nPersonLoggedIn.propTypes = {\r\n  location: PropTypes.shape({ state: PropTypes.object }).isRequired,\r\n  getPersons: PropTypes.func.isRequired,\r\n  getBanks: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getPersons, getBanks })(PersonLoggedIn);\r\n","import { ADD_PERSON, GET_PERSONS } from \"../actions/types\";\r\n\r\nconst initialState = { items: [], item: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PERSON:\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    case GET_PERSONS:\r\n      return { ...state, items: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_BANK, GET_BANKS, GET_BALANCE_BANK } from \"../actions/types\";\r\n\r\nconst initialState = { items: [], item: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_BANK:\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    case GET_BANKS:\r\n      return { ...state, items: action.payload };\r\n    case GET_BALANCE_BANK:\r\n      return { ...state, item: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_ACCOUNT,\r\n  GET_ACCOUNTS,\r\n  GET_BALANCE_ACCOUNT,\r\n  RESET_ACCOUNTS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = { items: [], item: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RESET_ACCOUNTS:\r\n      return { ...state, items: [] };\r\n    case ADD_ACCOUNT:\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    case GET_ACCOUNTS:\r\n      return { ...state, items: action.payload };\r\n    case GET_BALANCE_ACCOUNT:\r\n      return { ...state, item: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_ERROR, GET_ERRORS, RESET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = { items: [], item: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ERROR:\r\n      return { ...state, item: action.payload };\r\n    case GET_ERRORS:\r\n      return { ...state, item: action.payload };\r\n    case RESET_ERRORS:\r\n      return { ...state, item: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  RESET_TRANSACTIONS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = { items: [], item: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RESET_TRANSACTIONS:\r\n      return { ...state, items: [] };\r\n    case ADD_TRANSACTION:\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    case GET_TRANSACTIONS:\r\n      return { ...state, items: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport personReducer from \"./personReducer\";\r\nimport bankReducer from \"./bankReducer\";\r\nimport accountReducer from \"./accountReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport transactionReducer from \"./transactionReducer\";\r\n\r\nexport default combineReducers({\r\n  persons: personReducer,\r\n  banks: bankReducer,\r\n  accounts: accountReducer,\r\n  errors: errorReducer,\r\n  transactions: transactionReducer,\r\n});\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport Main from \"./Components/Main\";\r\nimport AccountLoggedIn from \"./Components/accountLoginPage/AccountLoggedIn\";\r\nimport BankLoggedIn from \"./Components/bankLoginPage/BankLoggedIn\";\r\nimport PersonLoggedIn from \"./Components/personLoginPage/PersonLoggedIn\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"./App.scss\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(\r\n      ...middleware\r\n    ) /* ,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() */\r\n  )\r\n);\r\n\r\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/account-login\" component={AccountLoggedIn} />\r\n          <Route path=\"/person-login\" component={PersonLoggedIn} />\r\n          <Route path=\"/bank-login\" component={BankLoggedIn} />\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.b9fb62f8.png\";","module.exports = __webpack_public_path__ + \"static/media/green-sphere-312.cd74b34f.png\";","module.exports = __webpack_public_path__ + \"static/media/orange_sphere-312.c826fa2b.png\";"],"sourceRoot":""}